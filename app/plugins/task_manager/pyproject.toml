[tool.poetry]
name = "nexus-plugin-task-manager"
version = "2.0.0"
description = "Comprehensive task management plugin for Nexus Framework"
authors = ["Nexus Team <team@nexus-framework.dev>"]
license = "MIT"
readme = "README.md"
homepage = "https://nexus-framework.dev/plugins/task-manager"
repository = "https://github.com/nexus-framework/plugin-task-manager"
documentation = "https://docs.nexus-framework.dev/plugins/task-manager"
keywords = [
    "nexus-plugin",
    "task-management",
    "productivity",
    "todo",
    "project-management",
    "workflow"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
packages = [
    { include = "task_manager" }
]
include = [
    "manifest.json",
    "README.md",
    "LICENSE",
    "migrations/**/*",
    "static/**/*",
    "templates/**/*"
]

[tool.poetry.dependencies]
python = "^3.11"
# Note: nexus-framework is expected to be installed separately
# nexus-framework = "^2.0.0"

# Database migrations
alembic = "^1.13.1"

# Task scheduling and reminders
apscheduler = "^3.10.4"
croniter = "^2.0.1"

# Date and time utilities
python-dateutil = "^2.8.2"
pytz = "^2023.3.post1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-asyncio = "^0.23.3"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
factory-boy = "^3.3.0"
faker = "^22.0.0"
black = "^23.12.1"
isort = "^5.13.2"
flake8 = "^7.0.0"
mypy = "^1.8.0"

[tool.poetry.group.export]
optional = true

[tool.poetry.group.export.dependencies]
# Excel export
openpyxl = "^3.1.2"
xlsxwriter = "^3.1.9"

# PDF generation
reportlab = "^4.0.8"
weasyprint = "^60.2"

# Template engine for reports
jinja2 = "^3.1.3"

[tool.poetry.group.database]
optional = true

[tool.poetry.group.database.dependencies]
# Database drivers - install based on your database choice
asyncpg = { version = "^0.29.0", optional = true }  # PostgreSQL
aiomysql = { version = "^0.2.0", optional = true }  # MySQL
motor = { version = "^3.3.2", optional = true }     # MongoDB

[tool.poetry.extras]
postgresql = ["asyncpg"]
mysql = ["aiomysql"]
mongodb = ["motor"]
export = ["openpyxl", "xlsxwriter", "reportlab", "jinja2"]
all = ["asyncpg", "aiomysql", "motor", "openpyxl", "xlsxwriter", "reportlab", "jinja2"]

[tool.poetry.scripts]
task-manager-migrate = "task_manager.scripts.migrate:main"
task-manager-init = "task_manager.scripts.init:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Tool Configurations

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    migrations
  | __pycache__
)/
'''

[tool.isort]
profile = "black"
line_length = 100
skip_glob = ["*/migrations/*"]

[tool.mypy]
python_version = "3.11"
namespace_packages = true
explicit_package_bases = true
show_error_codes = true
strict = true
exclude = [
    "tests/",
    "migrations/"
]

[[tool.mypy.overrides]]
module = [
    "apscheduler.*",
    "croniter.*",
    "alembic.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=task_manager",
    "--cov-report=term-missing",
    "--asyncio-mode=auto"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "requires_db: Tests requiring database"
]

[tool.coverage.run]
source = ["task_manager"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:"
]
