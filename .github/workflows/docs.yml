name: Documentation

on:
  push:
    branches: [main]
    paths:
      - 'docs/**'
      - 'README.md'
      - 'CONTRIBUTING.md'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [main]
    paths:
      - 'docs/**'
      - 'README.md'
      - 'CONTRIBUTING.md'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-docs-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        poetry install --no-interaction --no-root
        poetry add mkdocs mkdocs-material mkdocstrings[python] mkdocs-mermaid2-plugin

    - name: Install project
      run: poetry install --no-interaction

    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v3

    - name: Create MkDocs configuration
      run: |
        cat > mkdocs.yml << 'EOF'
        site_name: Nexus Documentation
        site_description: The Ultimate Plugin-Based Application Platform
        site_url: ${{ steps.pages.outputs.base_url }}
        repo_url: https://github.com/${{ github.repository }}
        repo_name: ${{ github.repository }}
        edit_uri: edit/main/

        theme:
          name: material
          palette:
            - media: "(prefers-color-scheme: light)"
              scheme: default
              primary: blue
              accent: blue
              toggle:
                icon: material/brightness-7
                name: Switch to dark mode
            - media: "(prefers-color-scheme: dark)"
              scheme: slate
              primary: blue
              accent: blue
              toggle:
                icon: material/brightness-4
                name: Switch to light mode
          features:
            - navigation.tabs
            - navigation.sections
            - navigation.expand
            - navigation.top
            - search.highlight
            - search.share
            - content.code.copy
            - content.action.edit
            - content.tabs.link

        markdown_extensions:
          - pymdownx.highlight:
              anchor_linenums: true
          - pymdownx.inlinehilite
          - pymdownx.snippets
          - pymdownx.superfences:
              custom_fences:
                - name: mermaid
                  class: mermaid
                  format: !!python/name:pymdownx.superfences.fence_code_format
          - pymdownx.tabbed:
              alternate_style: true
          - admonition
          - pymdownx.details
          - attr_list
          - md_in_html
          - toc:
              permalink: true

        plugins:
          - search
          - mermaid2

        nav:
          - Home: index.md
          - Getting Started:
            - getting-started/index.md
            - Installation: getting-started/installation.md
            - Quick Start: getting-started/quickstart.md
            - First Plugin: getting-started/first-plugin.md
            - Configuration: getting-started/configuration.md
          - Architecture:
            - architecture/index.md
            - Overview: architecture/overview.md
          - Plugin Development:
            - plugins/index.md
          - API Reference:
            - api/index.md
          - Deployment:
            - deployment/index.md
          - Guides:
            - guides/index.md
          - Contributing: CONTRIBUTING.md

        extra:
          social:
            - icon: fontawesome/brands/github
              link: https://github.com/${{ github.repository }}
            - icon: fontawesome/brands/python
              link: https://pypi.org/project/nexus/
          version:
            provider: mike
        EOF

    - name: Create documentation structure
      run: |
        # Create docs root index
        cp README.md docs/index.md

        # Create section indexes by copying README.md files
        cp docs/getting-started/README.md docs/getting-started/index.md
        cp docs/architecture/README.md docs/architecture/index.md
        cp docs/plugins/README.md docs/plugins/index.md

        # Create placeholder indexes for missing sections
        mkdir -p docs/api docs/deployment docs/guides

        echo "# API Reference" > docs/api/index.md
        echo "Complete API documentation coming soon." >> docs/api/index.md

        echo "# Deployment Guide" > docs/deployment/index.md
        echo "Production deployment guides coming soon." >> docs/deployment/index.md

        echo "# Guides" > docs/guides/index.md
        echo "Additional guides and tutorials coming soon." >> docs/guides/index.md

    - name: Build documentation
      run: poetry run mkdocs build

    - name: Upload documentation artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: site/

  validate-docs:
    name: Validate Documentation
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for broken links
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: 'yes'
        use-verbose-mode: 'yes'
        config-file: '.github/markdown-link-check.json'

    - name: Validate Mermaid diagrams
      run: |
        # Check if all mermaid diagrams are properly formatted
        find docs -name "*.md" -exec grep -l "```mermaid" {} \; | while read file; do
          echo "Checking Mermaid diagrams in $file"
          # Basic syntax check - ensure mermaid blocks are closed
          if ! grep -Pzo '```mermaid\n.*?\n```' "$file" > /dev/null; then
            echo "Warning: Potential Mermaid syntax issue in $file"
          fi
        done

    - name: Check documentation completeness
      run: |
        # Ensure all sections have content
        required_files=(
          "docs/README.md"
          "docs/getting-started/README.md"
          "docs/getting-started/installation.md"
          "docs/getting-started/quickstart.md"
          "docs/getting-started/first-plugin.md"
          "docs/getting-started/configuration.md"
          "docs/architecture/README.md"
          "docs/architecture/overview.md"
          "docs/plugins/README.md"
        )

        for file in "${required_files[@]}"; do
          if [[ ! -f "$file" ]]; then
            echo "‚ùå Missing required documentation file: $file"
            exit 1
          fi

          # Check if file has substantial content (more than just headers)
          if [[ $(wc -l < "$file") -lt 10 ]]; then
            echo "‚ö†Ô∏è  Documentation file may be incomplete: $file"
          fi
        done

        echo "‚úÖ Documentation completeness check passed"

  deploy:
    name: Deploy to GitHub Pages
    needs: [build-docs, validate-docs]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

    - name: Update deployment status
      run: |
        echo "üìö Documentation deployed successfully!"
        echo "üîó Site URL: ${{ steps.deployment.outputs.page_url }}"
